Protección de Memoria en xv6

Introducción

Este proyecto extiende el sistema operativo xv6 para implementar protección de memoria. Se agregaron dos llamadas al sistema, mprotect y munprotect, que permiten marcar y desmarcar una región de memoria como solo lectura.

Funcionamiento y Lógica de la Protección de Memoria

Funciones Implementadas
mprotect(void *addr, int len):
Marca una región de memoria como solo lectura, comenzando en la dirección addr y con longitud len.
Calcula cuántas páginas están involucradas y modifica el bit W de cada entrada en la tabla de páginas (PTE) para deshabilitar la escritura.
munprotect(void *addr, int len):
Restaura el permiso de escritura en una región de memoria previamente protegida por mprotect.
Similar a mprotect, esta función calcula las páginas afectadas y vuelve a activar el bit W de cada PTE para permitir escritura.
Manejo de Errores
Las funciones mprotect y munprotect manejan errores para asegurar la robustez de la protección de memoria:

Verifican que addr y len sean válidos y estén alineados con el tamaño de página.
Aseguran que las direcciones proporcionadas pertenecen al proceso actual.
Devuelven un error si algún parámetro es inválido o si la región de memoria no puede ser protegida/desprotegida.
Explicación de las Modificaciones Realizadas

Archivos Modificados
syscall.h: Se añadieron las definiciones de SYS_mprotect y SYS_munprotect.
syscall.c: Se registraron las funciones sys_mprotect y sys_munprotect en la tabla de llamadas al sistema.
user.h: Se declararon las funciones mprotect y munprotect para que estén disponibles en el espacio de usuario.
sysproc.c: Implementación de sys_mprotect y sys_munprotect, que validan los parámetros y llaman a las funciones internas.
vm.c: Lógica principal de mprotect y munprotect, que manipulan el bit de escritura en las entradas de la tabla de páginas.
defs.h: Se declararon las funciones mprotect y munprotect para uso en el kernel.

Dificultades y Soluciones Implementadas

Manejo de PTEs: Asegurarse de modificar correctamente el bit W en cada entrada de la tabla de páginas fue un desafío. Esto se solucionó con validaciones cuidadosas y usando walkpgdir para acceder a las PTEs.
Manejo de errores: Se implementaron verificaciones para garantizar que los parámetros de addr y len fueran válidos y alineados con el tamaño de página.
Actualización del TLB: Para asegurar que los cambios en los permisos de las páginas fueran efectivos, se recargó el registro CR3 después de modificar las PTEs.
